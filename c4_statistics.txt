Program c4.c LOC: 486

Functions LOC:
next() -- 84
expr() -- 147
stmt() -- 47
main() -- 181

Cyclomatic Complexity:
next() -- 85
expr() -- 91
stmt() -- 15
main() -- 100

Functions Length:
next() -- 85
expr() -- 149
stmt() -- 48
main() -- 196

================================================
  NLOC    CCN   token  PARAM  length  location
------------------------------------------------
	  84     85   1016      0      85 next@48-132@c4.c
	 147     91   2403      1     149 expr@134-282@c4.c
	  47     15    395      0      48 stmt@284-331@c4.c
	 181    100   2214      2     196 main@333-528@c4.c
1 file analyzed.
==============================================================
NLOC    Avg.NLOC  AvgCCN  Avg.token  function_cnt    file
--------------------------------------------------------------
	486     114.8    72.8     1507.0         4     c4.c

===========================================================================================================
!!!! Warnings (cyclomatic_complexity > 15 or length > 1000 or nloc > 1000000 or parameter_count > 100) !!!!
	 147     91   2403      1     149 expr@134-282@c4.c
	 181    100   2214      2     196 main@333-528@c4.c
==========================================================================================
Total nloc   Avg.NLOC  AvgCCN  Avg.token   Fun Cnt  Warning cnt   Fun Rt   nloc Rt
------------------------------------------------------------------------------------------
	   486     114.8    72.8     1507.0        4            3      0.75    0.90


Global Variables Count: 14
char *p		: Current position in source code
char *lp	: Start of current line
char *data	: Stores global variables and literals
int *e		: Current position in emitted code
int *le		: End position of e
int *id		: Current parsed identifier
int *sym	: Symbol table
int tk		: Current token
int ival	: Curretn token value
int ty		: Current expression
int loc		: local variables offset
int line	: Current line number
int src		: Source and assembly print flag
int debug	: Debug flag

Unique tokens and frequency:
There are a totaal of 37 unique tokens.
Frequencies:
198 if
190 tk
152 e
149 else
96 next
72 d
65 ty
62 p
61 i
58 id
58 a
56 sp
55 int
52 printf
52 n
41 return
38 PSH
37 line
37 expr
33 INT
31 while
30 t
26 exit
21 pc
20 char
19 IMM
19 Class
18 sizeof
18 PTR
18 Inc
17 poolsz
17 ival
16 Val
14 bad
13 LI
13 LC
13 CHAR
13 Assign
12 malloc
12 data
11 expected
11 argv
11 Type
11 Mul
10 SUB
9 MUL
9 ADD
8 pp
8 not
8 in
8 cycle
8 close
8 argc
8 Num
8 Int
8 Char
8 BZ
7 paren
7 open
7 enum
7 bp
7 b
7 Tk
7 Shl
7 SI
7 SC
7 Loc
7 JMP
7 Id
7 ADJ
6 void
6 stmt
6 s
6 le
6 current
6 could
6 bt
6 XOR
6 LEV
6 EXIT
6 EQ
6 DIV
6 Add
5 symbol
5 sym
5 memset
5 main
5 lp
5 include
5 h
5 area
5 SHR
5 SHL
5 OR
5 OPEN
5 NE
5 MOD
5 Lt
5 LT
5 LEA
5 LE
5 JSR
5 GT
5 GE
5 ENT
5 BNZ
5 And
5 AND
4 table
4 src
4 read
4 local
4 loc
4 load
4 fd
4 definition
4 Xor
4 Sub
4 READ
4 PRTF
4 Or
4 MSET
4 MCMP
4 MALC
4 Lan
4 HVal
4 HType
4 HClass
4 FREE
4 Eq
4 Dec
4 Cond
4 CLOS
4 A
3 type
3 to
3 subroutine
3 source
3 of
3 memcmp
3 lvalue
3 idmain
3 global
3 function
3 expression
3 duplicate
3 declaration
3 debug
3 address
3 While
3 Sys
3 Shr
3 Ne
3 Name
3 Mod
3 Lor
3 Le
3 Idsz
3 Hash
3 Gt
3 Glo
3 Ge
3 Fun
3 Div
3 Brak
2 zero
2 z
2 variable
2 token
2 store
2 stack
2 semicolon
2 print
2 position
2 pointer
2 parameter
2 or
2 long
2 lev
2 jump
2 increment
2 identifier
2 free
2 code
2 call
2 branch
2 add
2 _
2 Z
2 Sizeof
2 Return
2 If
2 Enum
2 Else
1 x
1 vm
1 value
1 usage
1 unwind
1 unknown
1 unistd
1 unexpected
1 undefined
1 track
1 text
1 temps
1 stdlib
1 stdio
1 size
1 simple
1 returns
1 returned
1 registers
1 push
1 precedence
1 pre
1 post
1 parsed
1 offset
1 number
1 missing
1 method
1 memory
1 locals
1 list
1 library
1 leave
1 keywords
1 keep
1 instructions
1 instruction
1 initializer
1 immediate
1 identifiers
1 handle
1 flag
1 file
1 fcntl
1 f
1 executed
1 error
1 eof
1 enter
1 emitted
1 dereference
1 defined
1 define
1 currently
1 conditional
1 compiler
1 colon
1 climbing
1 cast
1 c
1 bss
1 bracket
1 basetype
1 assignment
1 assembly
1 arbitrary
1 and
1 adjust
1 X
1 Top
1 Precedence
1 Operator
1 F
1 Down

Branches, loops and nesting levels:
348 if/else branches
32 loops (while loops)
Nesting level is based on CNN
next() -- high risk
expr() -- high risk
stmt() -- complex
main() -- unmanageable

Memory usage patterns using valgrind
Total heap usage: 1.25 MB
Malloc calls: 6 -- 5 allocating 256KB -- 1 allocating 1KB

Valgrind cant give memory specifics on stack since its only used for local variables, function calls and parameters.